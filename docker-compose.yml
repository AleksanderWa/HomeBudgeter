version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: budgeteer-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5454:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: budgeteer-backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      TRUELAYER_CLIENT_ID: ${TRUELAYER_CLIENT_ID}
      TRUELAYER_CLIENT_SECRET: ${TRUELAYER_CLIENT_SECRET}
      TRUELAYER_REDIRECT_URI: ${TRUELAYER_REDIRECT_URI}
      ALLOW_ORIGINS: ${ALLOW_ORIGINS}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8100:8000"
    restart: unless-stopped
    volumes:
      - ./backend:/app/backend
    command: >
      sh -c "cd /app/backend && 
             alembic upgrade head && 
             uvicorn backend.app.main:app --host 0.0.0.0 --port 8000"

  frontend:
    build:
      context: ./budget-frontend
    container_name: budgeteer-frontend
    ports:
      - "3100:3000"
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    volumes:
      - ./budget-frontend:/app
      - /app/node_modules

volumes:
  postgres_data: 